apiVersion: v1
kind: Namespace
metadata:
  name: scbs-local-dev
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: scbs-local-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6.2.5-alpine
        resources:
          limits:
            memory: "128Mi"
            cpu: "256m"
        ports:
        - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-manager
  namespace: scbs-local-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-manager
  template:
    metadata:
      labels:
        app: redis-manager
    spec:
      containers:
      - name: redis-manager
        image: rediscommander/redis-commander:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "256m"
        ports:
        - containerPort: 8081
        env:
          - name: REDIS_HOSTS
            value: local:redis:6379
          - name: URL_PREFIX
            value: /redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: scbs-local-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mariadb
        image: mariadb:10.6.4
        resources:
          limits:
            memory: "256Mi"
            cpu: "256m"
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: password
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: scbs-local-dev
spec:
  selector:
    app: redis
  type: NodePort
  ports:
  - port: 6379
    targetPort: 6379
    nodePort: 30000
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: scbs-local-dev
spec:
  selector:
    app: mysql
  type: NodePort
  ports:
  - port: 3306
    targetPort: 3306
    nodePort: 30003
---
apiVersion: v1
kind: Service
metadata:
  name: redis-manager
  namespace: scbs-local-dev
spec:
  selector:
    app: redis-manager
  ports:
  - port: 8081
    targetPort: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scbs-ingress
  namespace: scbs-local-dev
  # annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: "/redis"
        backend:
          service:
            name: redis-manager
            port:
              number: 8081